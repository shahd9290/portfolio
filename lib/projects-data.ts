export const projectsData = [
  {
    id: "revision-platform",
    title: "Competitive Revision Website",
    description: "Full-stack web application for competitive learning with real-time features and gamification",
    longDescription:
    "For my Final Year Project, I was tasked to created a full-stack web application in order to provide a service of my own choice. I had opted to supply a revision application, with a gamified twist as a means of ensuring that students stay engaged with their revision as opposed to becoming distracted. This led to gamifying the system, by allowing students compete with one another via a points-based system. The full leaderboard system has not yet been implemented, but is one that will be added in the future.",
    tech: ["Spring Boot", "Next.js", "PostgreSQL", "TailwindCSS", "JWT Authentication"],
    period: "Oct 2024 - Apr 2025",
    status: "Completed",
    grade: 89,
    category: "Web Development",
    features: [
      "Real-time competitive quizzes and challenges",
      "User authentication and profile management",
      "Progress tracking and analytics dashboard",
      "Responsive design for mobile and desktop",
      "RESTful API with comprehensive documentation",
      "Database optimization for high performance"
    ],
    challenges: [
      "Designed efficient database schema to handle complex user relationships and scoring",
      "Built responsive UI components that work seamlessly across different screen sizes",
      "Integrated JWT authentication with refresh token mechanism for security",
    ],
    github: "https://github.com/shahd9290/Competitive-Revision-Website",
    // demo: "https://revision-platform-demo.vercel.app",
  },
  {
    id: "ai-chatbot",
    title: "Religious Reminder AI Chatbot",
    description: "Intelligent chatbot with async capabilities and natural language processing",
    longDescription:
      "A Python-based chatbot designed to provide personalized religious reminders and guidance. Built using modern async programming patterns and object-oriented design principles. The bot features natural language processing capabilities and can handle multiple concurrent users efficiently.",
    tech: ["Python", "AsyncIO", "Natural Language Processing", "SQLite", "FastAPI", "Docker"],
    period: "Feb 2025",
    status: "Completed",
    category: "Software",
    features: [
      "Natural language processing for user queries",
      "Asynchronous message handling for multiple users",
      "Personalized reminder scheduling system",
      "SQLite database for user preferences and history",
      "RESTful API for integration with other applications",
      "Comprehensive logging and error handling",
    ],
    challenges: [
      "Implemented efficient async patterns to handle concurrent user sessions",
      "Designed flexible reminder system that adapts to user preferences",
      "Built robust error handling for various edge cases",
      "Optimized database queries for fast response times",
    ],
    github: "https://github.com/shahd9290/isoc-hackathon",
  },
  {
    id: "asset-management",
    title: "Enterprise Asset Management System",
    description: "Backend system for tracking and managing organizational assets with REST API",
    longDescription:
      "A robust backend system developed as part of a team project for managing organizational assets. Built with Spring Boot and Java, this system provides comprehensive asset tracking, user management, and reporting capabilities. Designed to handle enterprise-level data with high performance and reliability.",
    tech: ["Spring Boot", "Java", "MySQL", "REST API", "JPA/Hibernate", "Maven", "JUnit"],
    period: "Jan 2024 - Mar 2024",
    status: "Completed",
    category: "Backend",
    features: [
      "Complete CRUD operations for asset management",
      "User authentication and role-based access control",
      "Advanced search and filtering capabilities",
      "Comprehensive API documentation with Swagger",
      "Database relationships and data integrity constraints",
      "Automated testing suite with high coverage",
    ],
    challenges: [
      "Designed complex database relationships for asset hierarchies and dependencies",
      "Implemented efficient pagination for large datasets",
      "Built comprehensive validation system for data integrity",
      "Created flexible API endpoints that support various client requirements",
    ],
    github: "https://github.com/shahd9290/Assets-Repository",
  },
  {
    id: "password-manager",
    title: "Secure Password Manager",
    description: "Python-based password manager with encryption and user-friendly interface",
    longDescription:
      "A secure password management application developed for A-Level Computer Science coursework. Built with Python and SQLite3, this application provides encrypted storage for passwords with a simple, intuitive interface suitable for users of all technical levels. Features include password generation, secure storage, and easy retrieval.",
    tech: ["Python", "SQLite3", "Tkinter", "Cryptography", "Hashing", "GUI Design"],
    period: "Sep 2021 - May 2022",
    status: "Completed",
    category: "Software",
    features: [
      "Secure password encryption and storage",
      "Password strength analysis and generation",
      "User-friendly interface with search functionality",
      "Master password authentication",
      "Backup and restore capabilities",
      "Cross-platform compatibility",
    ],
    challenges: [
      "Implemented strong encryption algorithms for password security",
      "Designed intuitive interface for non-technical users",
      "Built efficient database schema for password organization",
      "Created secure authentication system with proper hashing",
    ],
    github: "https://github.com/shahd9290/Password-Manager",
  },
]
