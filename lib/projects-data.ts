export const projectsData = [
  {
    id: "revision-platform",
    title: "Competitive Revision Platform",
    description: "Full-stack web application for competitive learning with real-time features and gamification",
    longDescription:
      "A comprehensive web application designed to make studying competitive and engaging. Built as my final year project, this platform combines modern web technologies to create an interactive learning environment. Features include real-time competitions, progress tracking, user authentication, and a responsive design that works across all devices.",
    tech: ["Spring Boot", "Next.js", "PostgreSQL", "TailwindCSS", "JWT Authentication", "WebSocket", "Docker"],
    period: "Oct 2024 - Apr 2025",
    status: "In Development",
    category: "Web Development",
    features: [
      "Real-time competitive quizzes and challenges",
      "User authentication and profile management",
      "Progress tracking and analytics dashboard",
      "Responsive design for mobile and desktop",
      "RESTful API with comprehensive documentation",
      "Database optimization for high performance",
      "Automated testing and CI/CD pipeline",
    ],
    challenges: [
      "Implemented WebSocket connections for real-time features while maintaining scalability",
      "Designed efficient database schema to handle complex user relationships and scoring",
      "Built responsive UI components that work seamlessly across different screen sizes",
      "Integrated JWT authentication with refresh token mechanism for security",
    ],
    github: "https://github.com/danyal/revision-platform",
    demo: "https://revision-platform-demo.vercel.app",
  },
  {
    id: "ai-chatbot",
    title: "Religious Reminder AI Chatbot",
    description: "Intelligent chatbot with async capabilities and natural language processing",
    longDescription:
      "A Python-based chatbot designed to provide personalized religious reminders and guidance. Built using modern async programming patterns and object-oriented design principles. The bot features natural language processing capabilities and can handle multiple concurrent users efficiently.",
    tech: ["Python", "AsyncIO", "Natural Language Processing", "SQLite", "FastAPI", "Docker"],
    period: "Feb 2025",
    status: "Completed",
    category: "Software",
    features: [
      "Natural language processing for user queries",
      "Asynchronous message handling for multiple users",
      "Personalized reminder scheduling system",
      "SQLite database for user preferences and history",
      "RESTful API for integration with other applications",
      "Comprehensive logging and error handling",
    ],
    challenges: [
      "Implemented efficient async patterns to handle concurrent user sessions",
      "Designed flexible reminder system that adapts to user preferences",
      "Built robust error handling for various edge cases",
      "Optimized database queries for fast response times",
    ],
    github: "https://github.com/danyal/religious-reminder-bot",
  },
  {
    id: "asset-management",
    title: "Enterprise Asset Management System",
    description: "Backend system for tracking and managing organizational assets with REST API",
    longDescription:
      "A robust backend system developed as part of a team project for managing organizational assets. Built with Spring Boot and Java, this system provides comprehensive asset tracking, user management, and reporting capabilities. Designed to handle enterprise-level data with high performance and reliability.",
    tech: ["Spring Boot", "Java", "MySQL", "REST API", "JPA/Hibernate", "Maven", "JUnit"],
    period: "Jan 2024 - Mar 2024",
    status: "Completed",
    category: "Backend",
    features: [
      "Complete CRUD operations for asset management",
      "User authentication and role-based access control",
      "Advanced search and filtering capabilities",
      "Comprehensive API documentation with Swagger",
      "Database relationships and data integrity constraints",
      "Automated testing suite with high coverage",
    ],
    challenges: [
      "Designed complex database relationships for asset hierarchies and dependencies",
      "Implemented efficient pagination for large datasets",
      "Built comprehensive validation system for data integrity",
      "Created flexible API endpoints that support various client requirements",
    ],
    github: "https://github.com/danyal/asset-management-backend",
  },
  {
    id: "robotics-tank",
    title: "Ball Shooter Tank Robot",
    description: "Java-controlled robotics project with Bluetooth connectivity and QR code scanning",
    longDescription:
      "An innovative robotics project that combines hardware control with software intelligence. The tank robot can autonomously navigate, scan QR codes using an Android device, and shoot balls at targets. Built as part of a team project, this system demonstrates integration between Java applications, Bluetooth communication, and mobile devices.",
    tech: ["Java", "Bluetooth API", "Android SDK", "Computer Vision", "Robotics", "QR Code Processing"],
    period: "Jan 2023 - Mar 2023",
    status: "Completed",
    category: "Software",
    features: [
      "Autonomous navigation and obstacle avoidance",
      "Bluetooth communication with Android device",
      "QR code scanning and processing",
      "Ball shooting mechanism with targeting system",
      "Real-time control interface",
      "Sensor data processing and decision making",
    ],
    challenges: [
      "Integrated multiple hardware components with software control systems",
      "Implemented reliable Bluetooth communication protocol",
      "Developed computer vision algorithms for QR code detection",
      "Created responsive control system for real-time robot operation",
    ],
  },
  {
    id: "trading-card-game",
    title: "Trading Card Game Client",
    description: "Java client application for online trading card game with server connectivity",
    longDescription:
      "A desktop client application for a trading card game that connects to a central server for card trading and game management. Built with Java Swing for the user interface and socket programming for network communication. Features include card collection management, trading interface, and real-time game updates.",
    tech: ["Java", "Swing", "Socket Programming", "JSON", "Multi-threading", "MVC Architecture"],
    period: "Mar 2023",
    status: "Completed",
    category: "Software",
    features: [
      "Interactive card collection interface",
      "Real-time trading system with other players",
      "Server synchronization for card data",
      "User-friendly GUI with drag-and-drop functionality",
      "Multi-threaded architecture for smooth performance",
      "Persistent local storage for user preferences",
    ],
    challenges: [
      "Implemented efficient network communication protocols",
      "Designed responsive UI that handles real-time updates",
      "Built robust error handling for network connectivity issues",
      "Created efficient data structures for card management",
    ],
  },
  {
    id: "password-manager",
    title: "Secure Password Manager",
    description: "Python-based password manager with encryption and user-friendly interface",
    longDescription:
      "A secure password management application developed for A-Level Computer Science coursework. Built with Python and SQLite3, this application provides encrypted storage for passwords with a simple, intuitive interface suitable for users of all technical levels. Features include password generation, secure storage, and easy retrieval.",
    tech: ["Python", "SQLite3", "Tkinter", "Cryptography", "Hashing", "GUI Design"],
    period: "Sep 2021 - May 2022",
    status: "Completed",
    category: "Software",
    features: [
      "Secure password encryption and storage",
      "Password strength analysis and generation",
      "User-friendly interface with search functionality",
      "Master password authentication",
      "Backup and restore capabilities",
      "Cross-platform compatibility",
    ],
    challenges: [
      "Implemented strong encryption algorithms for password security",
      "Designed intuitive interface for non-technical users",
      "Built efficient database schema for password organization",
      "Created secure authentication system with proper hashing",
    ],
    github: "https://github.com/danyal/password-manager",
  },
]
